server {
  #SSL 默认访问端口号为 443
  listen 443 ssl;
  # 证书文件的相对路径或绝对路径
  ssl_certificate /data/signaling.fedtop.com.pem;
  # 私钥文件的相对路径或绝对路径
  ssl_certificate_key /data/signaling.fedtop.com.key;

  #请填写绑定证书的域名
  server_name signaling.fedtop.com;

  location / {
    proxy_pass http://localhost:3000;

    # http://nginx.org/en/docs/http/websocket.html
    # https://echizen.github.io/tech/2018/10-21-nginx-websocket
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    # proxy_set_header Host $host;
    # proxy_cache_bypass $http_upgrade;

    # add_header Access-Control-Allow-Origin * always;
    # add_header Access-Control-Allow-Headers *;


    # #   预检命令的缓存，如果不缓存每次会发送两次请求
    # add_header Access-Control-Max-Age 3600;
    # # $http_origin动态获取请求客户端请求的域 不用*的原因是带cookie的请求不支持 *
    # add_header Access-Control-Allow-Origin $http_origin;
    # # 表示请求头的字段 动态获取
    # add_header Access-Control-Allow-Headers $http_access_control_request_headers;
    # # 指定允许跨域的方法，*代表所有
    # add_header Access-Control-Allow-Methods *;
    # # 带cookie请求需要加上这个字段，并设置为true
    # add_header Access-Control-Allow-Credentials true;

    # # OPTIONS预检命令，预检命令通过时才发送请求，这里检查请求的类型是不是预检命令
    # if ($request_method = OPTIONS) {
    #     return 200;
    # }

    # 不是非简单请求的且不带cookie只需2个字段即可解决跨域 
    # add_header Access-Control-Allow-Methods *;
    # add_header Access-Control-Allow-Origin $http_origin;

    # #允许带上cookie请求
    # add_header 'Access-Control-Allow-Credentials' 'true';
    # #允许跨域请求的域，*代表所有
    # add_header 'Access-Control-Allow-Origin' *;
    # #允许请求的方法，比如 GET/POST/PUT/DELETE
    # add_header 'Access-Control-Allow-Methods' *;
    # #允许请求的header
    # add_header 'Access-Control-Allow-Headers' *;
    # #设置不缓存
    # add_header Cache-Control 'no-store, no-cache';
  }
}